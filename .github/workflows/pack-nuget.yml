name: Pack Nuget

on:
  workflow_dispatch:
    inputs:
      upload-artifact:
        description: 'NuGet artifact will be saved'
        type: boolean
        required: false
        default: false
      push-to-nuget:
        description: 'NuGet will be pushed to nuget.org'
        type: boolean
        required: false
        default: false
  release:
    types: [published]

env:
  project: ./source/Just.Nuget.sln
  test-project: ./source/Just.Nuget.sln
  configuration: Release

  package-root: "${{ github.workspace }}/nupkgs"

jobs:
  test-nuget:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install dotnet
      uses: actions/setup-dotnet@3e891b0cb619bf60e2c25674b222b8940e2c1c25 # v4.1.0
      with:
        dotnet-version: 8.x

    - name: Build the project
      run: dotnet build ${{ env.project }} --configuration ${{ env.configuration }}

    - name: Test the project
      run: dotnet test ${{ env.test-project }} --configuration ${{ env.configuration }}

  pack-nuget:
    needs: [test-nuget]
    strategy:
      matrix:
        nuget-project:
          - './source/Just.Nuget/Just.Nuget.csproj'
    runs-on: ubuntu-latest

    env:
      nuget-project: ${{ matrix.nuget-project }}

    steps:
    - name: Read artifact name
      id: artifact-name
      shell: bash
      run: |
        project="${{ env.nuget-project }}"
        filename=$(basename -- $project)
        name=${filename%.*}
        echo "artifact-name=$name" >> $GITHUB_OUTPUT

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install dotnet
      uses: actions/setup-dotnet@3e891b0cb619bf60e2c25674b222b8940e2c1c25 # v4.1.0
      with:
        dotnet-version: 8.x

    - name: Pack
      uses: finebits/github-actions/pack-nuget@v1.5.1
      with:
        project: ${{ env.nuget-project }}
        configuration: ${{ env.configuration }}
        upload-artifact: ${{ github.event_name == 'release' || inputs.upload-artifact == true }}
        artifact-name: ${{ env.artifact-name }}
        push-to-nuget: ${{ ( github.event_name == 'release' || inputs.push-to-nuget == true ) && env.nuget-apikey != '' }}
        nuget-apikey: ${{ env.nuget-apikey }}
      env:
        artifact-name: "${{ steps.artifact-name.outputs.artifact-name }}"
        nuget-apikey: ${{ secrets.NUGET_APIKEY }}
